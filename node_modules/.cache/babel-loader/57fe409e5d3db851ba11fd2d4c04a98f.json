{"ast":null,"code":"var _jsxFileName = \"/home/nino/Desktop/quiz-app/src/routes/quiz.js\",\n    _s = $RefreshSig$();\n\nimport { CircularProgress, Button } from \"@material-ui/core\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = ({\n  questions\n}) => {\n  _s();\n\n  const [i, setIndex] = useState(0);\n  const [chosen, setChosen] = useState(false);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    console.log(questions);\n  }, question);\n  return questions != [] ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: (questions, \"Hey\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 26\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"No ques\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 56\n  }, this);\n};\n\n_s(Quiz, \"/ps3IobU1f2aFQK2o6gWwzifBxg=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/home/nino/Desktop/quiz-app/src/routes/quiz.js"],"names":["CircularProgress","Button","useState","useEffect","Quiz","questions","i","setIndex","chosen","setChosen","options","setOptions","console","log","question"],"mappings":";;;AAAA,SAASA,gBAAT,EAA2BC,MAA3B,QAAyC,mBAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAAA;;AAC7B,QAAM,CAACC,CAAD,EAAIC,QAAJ,IAAgBL,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACfS,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACA,GAFQ,EAENS,QAFM,CAAT;AAGA,SAAQT,SAAS,IAAE,EAAX,gBAAgB;AAAA,eAAKA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB,gBAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtD;AAEA,CATD;;GAAMD,I;;KAAAA,I;AAUN,eAAeA,IAAf","sourcesContent":["import { CircularProgress, Button } from \"@material-ui/core\";\nimport { useState, useEffect } from 'react';\nconst Quiz = ({questions}) => {\n\tconst [i, setIndex] = useState(0);\n\tconst [chosen, setChosen] = useState(false);\n\tconst [options, setOptions] = useState([]);\n\tuseEffect(() => {\n\t\tconsole.log(questions);\n\t}, question);\n\treturn (questions!=[] ? <h1>{questions, \"Hey\"}</h1> : <h1>No ques</h1>);\n\t\t\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}