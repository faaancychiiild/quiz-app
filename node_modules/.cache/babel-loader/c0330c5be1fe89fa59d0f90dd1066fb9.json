{"ast":null,"code":"var _jsxFileName = \"/home/nino/Desktop/quiz-app/src/routes/quiz.js\",\n    _s = $RefreshSig$();\n\nimport { CircularProgress, Button } from \"@material-ui/core\";\nimport { useState, useEffect } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = ({\n  questions\n}) => {\n  _s();\n\n  const [i, setIndex] = useState(0);\n  const [chosen, setChosen] = useState(false);\n  let [options, setOptions] = useState([]);\n  useEffect(() => {\n    if (questions.length > 0) {\n      var _questions$i, _questions$i2;\n\n      let ops = (_questions$i = questions[i]) === null || _questions$i === void 0 ? void 0 : _questions$i.incorrect_answers;\n      ops = ops.concat((_questions$i2 = questions[i]) === null || _questions$i2 === void 0 ? void 0 : _questions$i2.correct_answer);\n      console.log(ops);\n      setOptions(options.concat(ops));\n      console.log(ops, options);\n    }\n  }, [questions]);\n\n  const Option = () => {\n    return options.map(op => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      children: op\n    }, options.indexOf(op), false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 22\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"quiz-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Option, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Question, \"/ps3IobU1f2aFQK2o6gWwzifBxg=\");\n\n_c = Question;\n\nconst Quiz = ({\n  questions\n}) => {\n  return questions !== [] ? /*#__PURE__*/_jsxDEV(Question, {\n    questions: questions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 27\n  }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {\n    color: \"inherit\",\n    size: 50,\n    thickness: 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 63\n  }, this);\n};\n\n_c2 = Quiz;\nexport default Quiz;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"Quiz\");","map":{"version":3,"sources":["/home/nino/Desktop/quiz-app/src/routes/quiz.js"],"names":["CircularProgress","Button","useState","useEffect","Question","questions","i","setIndex","chosen","setChosen","options","setOptions","length","ops","incorrect_answers","concat","correct_answer","console","log","Option","map","op","indexOf","str","Quiz"],"mappings":";;;AAAA,SAASA,gBAAT,EAA2BC,MAA3B,QAAyC,mBAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,YAAP;;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAAA;;AACjC,QAAM,CAACC,CAAD,EAAIC,QAAJ,IAAgBL,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,MAAI,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAGE,SAAS,CAACO,MAAV,GAAmB,CAAtB,EAAwB;AAAA;;AACvB,UAAIC,GAAG,mBAAGR,SAAS,CAACC,CAAD,CAAZ,iDAAG,aAAcQ,iBAAxB;AACAD,MAAAA,GAAG,GAAGA,GAAG,CAACE,MAAJ,kBAAWV,SAAS,CAACC,CAAD,CAApB,kDAAW,cAAcU,cAAzB,CAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAF,MAAAA,UAAU,CAACD,OAAO,CAACK,MAAR,CAAeF,GAAf,CAAD,CAAV;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAAiBH,OAAjB;AACA;AACD,GARQ,EAQN,CAACL,SAAD,CARM,CAAT;;AAUA,QAAMc,MAAM,GAAG,MAAM;AACpB,WACCT,OAAO,CAACU,GAAR,CAAYC,EAAE,iBAAI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAAA,gBAAuDA;AAAvD,OAAiCX,OAAO,CAACY,OAAR,CAAgBD,EAAhB,CAAjC;AAAA;AAAA;AAAA;AAAA,YAAlB,CADD;AAGA,GAJD;;AAMA,sBACC;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,4BACA;AAAA,gBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CA5BD;;GAAMnB,Q;;KAAAA,Q;;AA8BN,MAAMoB,IAAI,GAAG,CAAC;AAACnB,EAAAA;AAAD,CAAD,KAAiB;AAC7B,SAAQA,SAAS,KAAG,EAAZ,gBAAiB,QAAC,QAAD;AAAU,IAAA,SAAS,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAjB,gBAAqD,QAAC,gBAAD;AACpD,IAAA,KAAK,EAAC,SAD8C;AAEpD,IAAA,IAAI,EAAE,EAF8C;AAGpD,IAAA,SAAS,EAAE;AAHyC;AAAA;AAAA;AAAA;AAAA,UAA7D;AAMA,CAPD;;MAAMmB,I;AAQN,eAAeA,IAAf","sourcesContent":["import { CircularProgress, Button } from \"@material-ui/core\";\nimport { useState, useEffect } from 'react';\nimport '../App.css';\nconst Question = ({questions}) => {\n\tconst [i, setIndex] = useState(0);\n\tconst [chosen, setChosen] = useState(false);\n\tlet [options, setOptions] = useState([]);\n\t\n\tuseEffect(() => {\n\t\tif(questions.length > 0){\n\t\t\tlet ops = questions[i]?.incorrect_answers;\n\t\t\tops = ops.concat(questions[i]?.correct_answer);\n\t\t\tconsole.log(ops);\n\t\t\tsetOptions(options.concat(ops));\n\t\t\tconsole.log(ops, options);\n\t\t}\n\t}, [questions])\n\n\tconst Option = () => {\n\t\treturn (\n\t\t\toptions.map(op => <Button variant=\"outlined\"  key={options.indexOf(op)}>{op}</Button>)\n\t\t)\n\t}\n\n\treturn (\n\t\t<form className=\"quiz-form\">\n\t\t<p>{str}</p>\n\t\t<Option />\n\t\t<Button type='submit'/>\n\t\t</form>\n\t\t)\n}\n\nconst Quiz = ({questions}) => {\n\treturn (questions!==[] ? <Question questions={questions}/> : <CircularProgress\n          color=\"inherit\"\n          size={50}\n          thickness={1}\n        />);\n\t\t\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}