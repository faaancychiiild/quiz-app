{"ast":null,"code":"var _jsxFileName = \"/home/nino/Desktop/quiz-app/src/routes/quiz.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@material-ui/core\";\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = ({\n  questions,\n  score,\n  setScore\n}) => {\n  _s();\n\n  var _questions$i;\n\n  const [i, setIndex] = useState(0);\n  const [notClicked, setNotClicked] = useState(true);\n  let [options, setOptions] = useState([]);\n  let str = (_questions$i = questions[i]) === null || _questions$i === void 0 ? void 0 : _questions$i.question;\n  let history = useHistory();\n  useEffect(() => {\n    if (questions.length > 0 && i < 10) {\n      var _questions$i2, _questions$i3;\n\n      let ops = (_questions$i2 = questions[i]) === null || _questions$i2 === void 0 ? void 0 : _questions$i2.incorrect_answers;\n      ops = ops.concat((_questions$i3 = questions[i]) === null || _questions$i3 === void 0 ? void 0 : _questions$i3.correct_answer);\n      ops = ops.sort(() => Math.random() > .5 ? 1 : -1);\n      setOptions(ops);\n    }\n  }, [questions, i]);\n\n  const handleCheck = e => {\n    if (notClicked) {\n      if (e.target.value === questions[i][\"correct_answer\"]) {\n        setScore(score += 1);\n        console.log(score);\n      } else {\n        e.target.style.backgroundColor = '#FF5733';\n      }\n\n      setNotClicked(false);\n    }\n  };\n\n  const handleNext = () => {\n    if (i >= 9) {\n      history.push('/result');\n    }\n\n    setIndex(i + 1);\n    setNotClicked(true);\n  };\n\n  const Option = () => {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ops-wrapper\",\n      children: options.map(op => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCheck,\n        variant: \"outlined\",\n        value: op,\n        className: \"op-button\",\n        children: op\n      }, options.indexOf(op), false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"quiz-form\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"nav-buttons\",\n      children: [\"SCORE: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quiz-quest\",\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Option, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"nav-buttons\",\n      onClick: handleNext,\n      children: \"Next question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"nav-buttons\",\n      href: \"/\",\n      children: \"Quit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Quiz, \"WvOw+eyP+CenkUz7CxP8rnwn2Cw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/home/nino/Desktop/quiz-app/src/routes/quiz.js"],"names":["Button","useState","useEffect","useHistory","Quiz","questions","score","setScore","i","setIndex","notClicked","setNotClicked","options","setOptions","str","question","history","length","ops","incorrect_answers","concat","correct_answer","sort","Math","random","handleCheck","e","target","value","console","log","style","backgroundColor","handleNext","push","Option","map","op","indexOf"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,YAAP;;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAAA;;AAAA;;AAC9C,QAAM,CAACC,CAAD,EAAIC,QAAJ,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AACA,MAAI,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIa,GAAG,mBAAGT,SAAS,CAACG,CAAD,CAAZ,iDAAG,aAAcO,QAAxB;AACA,MAAIC,OAAO,GAAGb,UAAU,EAAxB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACf,QAAGG,SAAS,CAACY,MAAV,GAAmB,CAAnB,IAAwBT,CAAC,GAAG,EAA/B,EAAkC;AAAA;;AACjC,UAAIU,GAAG,oBAAGb,SAAS,CAACG,CAAD,CAAZ,kDAAG,cAAcW,iBAAxB;AACAD,MAAAA,GAAG,GAAGA,GAAG,CAACE,MAAJ,kBAAWf,SAAS,CAACG,CAAD,CAApB,kDAAW,cAAca,cAAzB,CAAN;AACAH,MAAAA,GAAG,GAAGA,GAAG,CAACI,IAAJ,CAAS,MAAOC,IAAI,CAACC,MAAL,KAAgB,EAAjB,GAAuB,CAAvB,GAA2B,CAAC,CAA3C,CAAN;AACAX,MAAAA,UAAU,CAACK,GAAD,CAAV;AACA;AACD,GAPQ,EAON,CAACb,SAAD,EAAYG,CAAZ,CAPM,CAAT;;AASA,QAAMiB,WAAW,GAAIC,CAAD,IAAO;AAC1B,QAAGhB,UAAH,EAAc;AACb,UAAGgB,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmBvB,SAAS,CAACG,CAAD,CAAT,CAAa,gBAAb,CAAtB,EAAqD;AACrDD,QAAAA,QAAQ,CAACD,KAAK,IAAE,CAAR,CAAR;AACAuB,QAAAA,OAAO,CAACC,GAAR,CAAYxB,KAAZ;AACA,OAHA,MAGI;AACJoB,QAAAA,CAAC,CAACC,MAAF,CAASI,KAAT,CAAeC,eAAf,GAAiC,SAAjC;AACA;;AACDrB,MAAAA,aAAa,CAAC,KAAD,CAAb;AACC;AAED,GAXD;;AAYA,QAAMsB,UAAU,GAAG,MAAM;AACxB,QAAGzB,CAAC,IAAI,CAAR,EAAU;AACTQ,MAAAA,OAAO,CAACkB,IAAR,CAAa,SAAb;AACA;;AACDzB,IAAAA,QAAQ,CAACD,CAAC,GAAC,CAAH,CAAR;AACAG,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEA,GAPD;;AASA,QAAMwB,MAAM,GAAG,MAAM;AACpB,wBACC;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,gBACEvB,OAAO,CAACwB,GAAR,CAAYC,EAAE,iBAAI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEZ,WAAjB;AAA8B,QAAA,OAAO,EAAC,UAAtC;AAAiD,QAAA,KAAK,EAAEY,EAAxD;AAA4D,QAAA,SAAS,EAAC,WAAtE;AAAA,kBAA6GA;AAA7G,SAAuFzB,OAAO,CAAC0B,OAAR,CAAgBD,EAAhB,CAAvF;AAAA;AAAA;AAAA;AAAA,cAAlB;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAKA,GAND;;AAQA,sBACC;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA,4BAAwC/B,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,gBAA2BQ;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAEmB,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,IAAI,EAAC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CAvDD;;GAAM7B,I;UAKSD,U;;;KALTC,I;AAwDN,eAAeA,IAAf","sourcesContent":["import { Button } from \"@material-ui/core\";\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\nconst Quiz = ({questions, score, setScore}) => {\n\tconst [i, setIndex] = useState(0);\n\tconst [notClicked, setNotClicked] = useState(true);\n\tlet [options, setOptions] = useState([]);\n\tlet str = questions[i]?.question;\n\tlet history = useHistory();\n\tuseEffect(() => {\n\t\tif(questions.length > 0 && i < 10){\n\t\t\tlet ops = questions[i]?.incorrect_answers;\n\t\t\tops = ops.concat(questions[i]?.correct_answer);\n\t\t\tops = ops.sort(() => (Math.random() > .5) ? 1 : -1);\n\t\t\tsetOptions(ops);\n\t\t}\n\t}, [questions, i]);\n\n\tconst handleCheck = (e) => {\n\t\tif(notClicked){\n\t\t\tif(e.target.value === questions[i][\"correct_answer\"]){\n\t\t\tsetScore(score+=1);\n\t\t\tconsole.log(score);\n\t\t}else{\n\t\t\te.target.style.backgroundColor = '#FF5733';\n\t\t}\n\t\tsetNotClicked(false);\n\t\t}\n\n\t}\n\tconst handleNext = () => {\n\t\tif(i >= 9){\n\t\t\thistory.push('/result')\n\t\t}\n\t\tsetIndex(i+1);\n\t\tsetNotClicked(true);\n\t\t\n\t}\n\n\tconst Option = () => {\n\t\treturn (\n\t\t\t<section className=\"ops-wrapper\">\n\t\t\t\t{options.map(op => <Button onClick={handleCheck} variant=\"outlined\" value={op} className=\"op-button\" key={options.indexOf(op)}>{op}</Button>)}\n\t\t\t</section>\n\t\t)\n\t}\n\n\treturn (\n\t\t<section className=\"quiz-form\">\n\t\t<Button className=\"nav-buttons\">SCORE: {score}</Button>\n\t\t<p className=\"quiz-quest\">{str}</p>\n\t\t<Option />\n\t\t<Button className=\"nav-buttons\" onClick={handleNext}>Next question</Button>\n\t\t<Button className=\"nav-buttons\" href=\"/\">\n            Quit\n        </Button>\n\t\t</section>\n\t\t)\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}