{"ast":null,"code":"var _jsxFileName = \"/home/nino/Desktop/quiz-app/src/routes/quiz.js\",\n    _s = $RefreshSig$();\n\nimport { CircularProgress, Button } from \"@material-ui/core\";\nimport { useState, useEffect } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = ({\n  questions\n}) => {\n  _s();\n\n  var _questions$i;\n\n  const [i, setIndex] = useState(0);\n  const [clicked, setClicked] = useState(false);\n  let [selected, setSelected] = useState(false);\n  let [options, setOptions] = useState([]);\n  let [score, setScore] = useState(0);\n  let str = (_questions$i = questions[i]) === null || _questions$i === void 0 ? void 0 : _questions$i.question;\n  useEffect(() => {\n    if (questions.length > 0) {\n      var _questions$i2, _questions$i3;\n\n      let ops = (_questions$i2 = questions[i]) === null || _questions$i2 === void 0 ? void 0 : _questions$i2.incorrect_answers;\n      ops = ops.concat((_questions$i3 = questions[i]) === null || _questions$i3 === void 0 ? void 0 : _questions$i3.correct_answer);\n      ops = ops.sort(() => Math.random() > .5 ? 1 : -1);\n      setOptions(ops);\n    }\n  }, [questions]);\n\n  const handleCheck = e => {\n    console.log(clicked);\n\n    if (clicked === false) {\n      if (e.target.value === questions[i][\"correct_answer\"]) {\n        e.target.style.backgroundColor = '#C4EC86';\n        setScore(score + 1);\n        setSelected(true);\n      } else {\n        e.target.style.backgroundColor = '#FF5733';\n        setSelected(true);\n      }\n    }\n  };\n\n  const Option = () => {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ops-wrapper\",\n      children: options.map(op => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCheck,\n        variant: \"outlined\",\n        value: op,\n        className: \"op-button\",\n        children: op\n      }, options.indexOf(op), false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"quiz-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Option, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Next question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Question, \"01jiortm6fqUNXIvG3eS3G4OyZI=\");\n\n_c = Question;\n\nconst Quiz = ({\n  questions\n}) => {\n  return questions !== [] ? /*#__PURE__*/_jsxDEV(Question, {\n    questions: questions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 27\n  }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {\n    color: \"inherit\",\n    size: 50,\n    thickness: 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 63\n  }, this);\n};\n\n_c2 = Quiz;\nexport default Quiz;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"Quiz\");","map":{"version":3,"sources":["/home/nino/Desktop/quiz-app/src/routes/quiz.js"],"names":["CircularProgress","Button","useState","useEffect","Question","questions","i","setIndex","clicked","setClicked","selected","setSelected","options","setOptions","score","setScore","str","question","length","ops","incorrect_answers","concat","correct_answer","sort","Math","random","handleCheck","e","console","log","target","value","style","backgroundColor","Option","map","op","indexOf","Quiz"],"mappings":"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","sourcesContent":["import { CircularProgress, Button } from \"@material-ui/core\";\nimport { useState, useEffect } from 'react';\nimport '../App.css';\nconst Question = ({questions}) => {\n\tconst [i, setIndex] = useState(0);\n\tconst [clicked, setClicked] = useState(false);\n\tlet [selected, setSelected] = useState(false);\n\tlet [options, setOptions] = useState([]);\n\tlet [score, setScore] = useState(0);\n\tlet str = questions[i]?.question;\n\t\n\tuseEffect(() => {\n\t\tif(questions.length > 0){\n\t\t\tlet ops = questions[i]?.incorrect_answers;\n\t\t\tops = ops.concat(questions[i]?.correct_answer);\n\t\t\tops = ops.sort(() => (Math.random() > .5) ? 1 : -1);\n\t\t\tsetOptions(ops);\n\t\t}\n\t}, [questions])\n\n\tconst handleCheck = (e) => {\n\t\t\tconsole.log(clicked);\n\t\t\tif(clicked===false){\n\t\t\t\tif(e.target.value === questions[i][\"correct_answer\"]){\n\t\t\t\te.target.style.backgroundColor = \n\t\t\t\t'#C4EC86';\n\t\t\t\tsetScore(score + 1);\n\t\t\t\tsetSelected(true);\n\t\t\t}else{\n\t\t\t\te.target.style.backgroundColor = '#FF5733';\n\t\t\t\tsetSelected(true);\n\t\t\t}\n\t\t\t}\n\n\t}\n\n\tconst Option = () => {\n\t\treturn (\n\t\t\t<section className=\"ops-wrapper\">\n\t\t\t\t{options.map(op => <Button onClick={handleCheck} variant=\"outlined\" value={op} className=\"op-button\" key={options.indexOf(op)}>{op}</Button>)}\n\t\t\t</section>\n\t\t)\n\t}\n\n\treturn (\n\t\t<form className=\"quiz-form\">\n\t\t<p>{str}</p>\n\t\t<Option />\n\t\t<Button type='submit'>Next question</Button>\n\t\t</form>\n\t\t)\n}\n\nconst Quiz = ({questions}) => {\n\treturn (questions!==[] ? <Question questions={questions}/> : <CircularProgress\n          color=\"inherit\"\n          size={50}\n          thickness={1}\n        />);\n\t\t\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}